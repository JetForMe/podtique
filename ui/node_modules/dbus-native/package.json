{
  "name": "dbus-native",
  "author": {
    "name": "Andrey Sidorov",
    "email": "sidorares@yandex.com"
  },
  "version": "0.1.2",
  "keywords": [
    "dbus",
    "dcop",
    "d-bus",
    "rpc",
    "gnome",
    "kde"
  ],
  "description": "D-bus protocol implementation in native javascript",
  "directories": {
    "lib": "lib",
    "test": "test",
    "examples": "examples"
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "Andrey Sidorov",
      "email": "sidoares@yandex.ru"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/sidorares/node-dbus.git"
  },
  "bin": {
    "dbus2js": "./bin/dbus2js.js"
  },
  "dependencies": {
    "event-stream": "^3.1.7",
    "put": "0.0.6",
    "xml2js": "0.1.14",
    "abstract-socket": "github:jetforme/node-abstractsocket"
  },
  "optionalDependencies": {
    "abstract-socket": "JetForMe/node-abstractsocket"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "scripts": {
    "test": "mocha",
    "prepublish": "npm prune"
  },
  "engine": {
    "node": ">=0.10.0"
  },
  "gitHead": "e2a278cd6861d1798c4ffcb770818dbc98a03d62",
  "readme": "node-dbus\n===========\nD-bus protocol client and server for node.js\n\n[![Build Status](https://secure.travis-ci.org/sidorares/node-dbus.png)](http://travis-ci.org/sidorares/node-dbus)\n\nInstallation\n------------\n\n```shell\nnpm install dbus-native\n```\nor\n\n```shell\ngit clone https://github.com/sidorares/node-dbus # clone the repo\ncd node-dbus\nnpm install # install dependencies\nsudo cp examples/com.github.sidorares.dbus.Example.conf /etc/dbus-1/system.d/ # if you want to test examples/service.js\n```\n\nUsage\n------\n\nShort example using desktop notifications service\n\n```js\nvar dbus = require('dbus-native');\nvar sessionBus = dbus.sessionBus();\nsessionBus.getService('org.freedesktop.Notifications').getInterface(\n    '/org/freedesktop/Notifications',\n    'org.freedesktop.Notifications', function(err, notifications) {\n\n    // dbus signals are EventEmitter events\n    notifications.on('ActionInvoked', function() {\n        console.log('ActionInvoked', arguments);\n    });\n    notifications.on('NotificationClosed', function() {\n        console.log('NotificationClosed', arguments);\n    });\n    notifications.Notify('exampl', 0, '', 'summary 3', 'new message text', ['xxx yyy', 'test2', 'test3', 'test4'], [],  5, function(err, id) {\n       //setTimeout(function() { n.CloseNotification(id, console.log); }, 4000);\n    });\n});\n```\n\nAPI\n---\n\n### Low level messaging: bus connection\n\n`connection = dbus.createClient(options)`\n\noptions:\n   - socket - unix socket path\n   - port - TCP port\n   - host - TCP host\n   - busAddress - encoded bus address. Default is `DBUS_SESSION_BUS_ADDRESS` environment variable. See http://dbus.freedesktop.org/doc/dbus-specification.html#addresses\n   - ( TODO: add/document option to use adress from X11 session )\n\nconnection has only one method, `message(msg)`\n\nmessage fields:\n   - type - methodCall, methodReturn, error or signal\n   - path - object path\n   - interface\n   - destination\n   - sender\n   - member\n   - serial\n   - signature\n   - body\n   - errorName\n   - replySerial\n\nconnection signals:\n   - connect - emitted after successful authentication\n   - message\n   - error\n\nexample:\n\n```js\nvar dbus = require('dbus-native');\nvar conn = dbus.createConnection();\nconn.message({\n    path:'/org/freedesktop/DBus',\n    destination: 'org.freedesktop.DBus',\n    'interface': 'org.freedesktop.DBus',\n    member: 'Hello',\n    type: dbus.messageType.methodCall\n});\nconn.on('message', function(msg) { console.log(msg); });\n```\n\n\n### Links\n   - http://cgit.freedesktop.org/dbus - freedesktop reference C library\n   - https://github.com/guelfey/go.dbus\n   - https://github.com/Shouqun/node-dbus - libdbus\n   - https://github.com/Motorola-Mobility/node-dbus - libdbus\n   - https://github.com/izaakschroeder/node-dbus - libdbus\n   - https://github.com/agnat/node_libdbus\n   - https://github.com/agnat/node_dbus - native js\n   - https://github.com/cocagne/txdbus - native python + twisted\n   - http://search.cpan.org/~danberr/Net-DBus-1.0.0/ (seems to be native, but requires libdbus?)\n   - https://github.com/mvidner/ruby-dbus (native, sync)\n   - http://www.ndesk.org/DBusSharp (C#/Mono)\n   - https://github.com/lizenn/erlang-dbus/ - erlang\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sidorares/node-dbus/issues"
  },
  "homepage": "https://github.com/sidorares/node-dbus#readme",
  "_id": "dbus-native@0.1.2",
  "_shasum": "bbf910e24c5985143b027d79a5a7ad4d82470d51",
  "_from": "jetforme/node-dbus",
  "_resolved": "git://github.com/jetforme/node-dbus.git#e2a278cd6861d1798c4ffcb770818dbc98a03d62"
}
